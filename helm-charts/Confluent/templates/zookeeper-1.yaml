# Adapted from https://hub.docker.com/_/zookeeper
{{- if .Values.zookeeperCluster.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zookeeper1
  namespace: "{{ .Values.infrastructure.namespace }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: zookeeper1
    spec:
      containers:
      - image: "zookeeper:3.5.8"
        name: zookeeper1
        resources:
          requests:
            memory: "2048Mi"
            cpu: "750m"
          limits:
            memory: "4096Mi"
            cpu: "1000m"
        env:
        #- name: ZOO_MY_ID
        #  value: "1"
        #- name: ZOO_SERVERS
        #  value: "server.1=0.0.0.0:2888:3888;2181 server.2=zookeeper2-internal:2888:3888;2181 server.3=zookeeper3-internal:2888:3888;2181"
        #- name: ZOO_STANDALONE_ENABLED
        #  value: "false"
        - name: ZOO_ADMINSERVER_ENABLED
          value: "true"
        #- name: ZOO_CONF_DIR
        #  value: "/var/lib/zookeeper/conf"
        - name: ZOO_DATA_DIR
          value: "/var/lib/zookeeper/data"
        - name: ZOO_DATA_LOG_DIR
          value: "/var/lib/zookeeper/datalog"
        - name: ZOO_LOG_DIR
          value: "/var/lib/zookeeper/logs"
        - name: ZOO_TICK_TIME
          value: "{{ .Values.zookeeper.tickTime }}"
        - name: ZOO_INIT_LIMIT
          value: "5"
        - name: ZOO_SYNC_LIMIT
          value: "2"
        - name: ZOO_AUTOPURGE_PURGEINTERVAL
          value: "0"
        - name: ZOO_AUTOPURGE_SNAPRETAINCOUNT
          value: "3"
        - name: ZOO_MAX_CLIENT_CNXNS
          value: "0"
        - name: JVMFLAGS
          value: "-Xmx2048M -Xms2048M"
        ports:
        - containerPort: 2181
          name: clientport
        - containerPort: 2888
          name: followerport
        - containerPort: 3888
          name: electionport
        - containerPort: 8080
          name: adminserverport
        readinessProbe:
          tcpSocket:
            port: 2181
          initialDelaySeconds: 120
          periodSeconds: 10
          failureThreshold: 3
        livenessProbe:
          tcpSocket:
            port: 2181
          initialDelaySeconds: 15
          failureThreshold: 2
          periodSeconds: 20
        volumeMounts:
        - name: "data-volume"
          mountPath: /var/lib/zookeeper/data
        - name: "datalog-volume"
          mountPath: /var/lib/zookeeper/datalog
        - name: "log-volume"
          mountPath: /var/lib/zookeeper/logs
        - name: "conf-volume"
          mountPath: /var/lib/zookeeper/conf
      volumes:
      - name: "data-volume"
        persistentVolumeClaim:
          claimName: "zookeeper1-data-storage"
      - name: "datalog-volume"
        persistentVolumeClaim:
          claimName: "zookeeper1-datalog-storage"
      - name: "log-volume"
        persistentVolumeClaim:
          claimName: "zookeeper1-log-storage"
      - name: "conf-volume"
        persistentVolumeClaim:
          claimName: "zookeeper1-conf-storage"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: "zookeeper1-data-storage"
  namespace: "{{ .Values.infrastructure.namespace }}"
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: {{ .Values.infrastructure.storageClass }}
  resources:
    requests:
      storage: 5Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: "zookeeper1-datalog-storage"
  namespace: "{{ .Values.infrastructure.namespace }}"
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: {{ .Values.infrastructure.storageClass }}
  resources:
    requests:
      storage: 5Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: "zookeeper1-log-storage"
  namespace: "{{ .Values.infrastructure.namespace }}"
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: {{ .Values.infrastructure.storageClass }}
  resources:
    requests:
      storage: 5Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: "zookeeper1-conf-storage"
  namespace: "{{ .Values.infrastructure.namespace }}"
spec:
  accessModes:
  - ReadWriteOnce
  storageClassName: {{ .Values.infrastructure.storageClass }}
  resources:
    requests:
      storage: 5Gi

---
# This is the external load balancer
apiVersion: v1
kind: Service
metadata:
  name: "zookeeper1-external"
  namespace: "{{ .Values.infrastructure.namespace }}"
spec:
  type: "LoadBalancer"
  ports:
  - port: 2181
    name: clientport
  - port: 2888
    name: followerport
  - port: 3888
    name: electionport
  - port: 8080
    name: adminserverport
  selector:
    app: zookeeper1
---
# This is the internal load balancer
apiVersion: v1
kind: Service
metadata:
  name: "zookeeper1-internal"
  namespace: "{{ .Values.infrastructure.namespace }}"
  annotations:
    service.beta.kubernetes.io/azure-load-balancer-internal: "true"
spec:
  type: "LoadBalancer"
  ports:
  - port: 2181
    name: clientport
  - port: 2888
    name: followerport
  - port: 3888
    name: electionport
  - port: 8080
    name: adminserverport
  selector:
    app: zookeeper1

{{- end }}