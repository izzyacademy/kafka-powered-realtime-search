{
	"info": {
		"_postman_id": "257f5e90-44be-4d6f-9339-4b49f0a27c41",
		"name": "Kafka-Powered DB/Search Sync",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "REST_PROXY",
			"item": [
				{
					"name": "LIST_TOPICS",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.kafka.v2+json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{kafka-restproxy-host}}:8082/topics",
							"protocol": "http",
							"host": [
								"{{kafka-restproxy-host}}"
							],
							"port": "8082",
							"path": [
								"topics"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET TOPIC DETAILS - RIVER CONNECT OFFSETS",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.kafka.v2+json"
							}
						],
						"url": {
							"raw": "http://{{kafka-restproxy-host}}:8082/topics/river-connect-offsets",
							"protocol": "http",
							"host": [
								"{{kafka-restproxy-host}}"
							],
							"port": "8082",
							"path": [
								"topics",
								"river-connect-offsets"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET TOPIC DETAILS - PRODUCTS",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.kafka.v2+json"
							}
						],
						"url": {
							"raw": "http://{{kafka-restproxy-host}}:8082/topics/estreams64.ecommerce.products",
							"protocol": "http",
							"host": [
								"{{kafka-restproxy-host}}"
							],
							"port": "8082",
							"path": [
								"topics",
								"estreams64.ecommerce.products"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET TOPIC DETAILS - PRODUCT DETAILS",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"type": "text",
								"value": "application/vnd.kafka.v2+json"
							}
						],
						"url": {
							"raw": "http://{{kafka-restproxy-host}}:8082/topics/estreams64.ecommerce.product_details",
							"protocol": "http",
							"host": [
								"{{kafka-restproxy-host}}"
							],
							"port": "8082",
							"path": [
								"topics",
								"estreams64.ecommerce.product_details"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "KAFKA_CONNECT",
			"item": [
				{
					"name": "LIST CONNECTOR PLUGINS",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{kafka-connect-host}}:8083/connector-plugins",
							"protocol": "http",
							"host": [
								"{{kafka-connect-host}}"
							],
							"port": "8083",
							"path": [
								"connector-plugins"
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST CONNECTORS",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{kafka-connect-host}}:8083/connectors",
							"protocol": "http",
							"host": [
								"{{kafka-connect-host}}"
							],
							"port": "8083",
							"path": [
								"connectors"
							]
						}
					},
					"response": []
				},
				{
					"name": "CREATE CUSTOMERS  SOURCE CONNECTOR",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"ecommerce-customers-streams-75\",\n    \"config\": {\n      \"connector.class\": \"io.debezium.connector.mysql.MySqlConnector\",\n      \"database.hostname\": \"mysql\",\n      \"database.port\": \"3306\",\n      \"database.user\": \"debezium\",\n      \"database.password\": \"db3k4Cc\",\n      \"database.server.id\": \"75\",\n      \"database.server.name\": \"estreams75\",\n      \"table.include.list\" : \"ecommerce.customers\",\n      \"database.history.kafka.bootstrap.servers\": \"node1:9092\",\n      \"database.history.kafka.topic\": \"dbhistory.estreams75\",\n      \"include.schema.changes\": \"false\",\n      \"transforms\": \"unwrap,createkey,extractkey\",\n      \"transforms.unwrap.type\" : \"io.debezium.transforms.ExtractNewRecordState\",\n      \"transforms.unwrap.drop.tombstones\": \"false\",\n      \"transforms.unwrap.delete.handling.mode\": \"none\",\n      \"transforms.createkey.type\":\"org.apache.kafka.connect.transforms.ValueToKey\",\n      \"transforms.createkey.fields\":\"customer_id\",\n      \"transforms.extractkey.type\": \"org.apache.kafka.connect.transforms.ExtractField$Key\",\n      \"transforms.extractkey.field\": \"customer_id\",\n      \"key.converter\": \"org.apache.kafka.connect.converters.IntegerConverter\",\n      \"value.converter\": \"io.confluent.connect.avro.AvroConverter\",\n      \"value.converter.schema.registry.url\": \"http://schema-registry:8081\"\n    }\n  }"
						},
						"url": {
							"raw": "http://{{kafka-connect-host}}:8083/connectors",
							"protocol": "http",
							"host": [
								"{{kafka-connect-host}}"
							],
							"port": "8083",
							"path": [
								"connectors"
							]
						}
					},
					"response": []
				},
				{
					"name": "CREATE CUSTOMERS ES SINK CONNECTOR",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"elasticsearch-customers\",\n  \"config\": {\n    \"connector.class\": \"io.confluent.connect.elasticsearch.ElasticsearchSinkConnector\",\n    \"connection.url\": \"http://elasticsearch:9200\",\n    \"connection.username\": \"elastic\",\n    \"connection.password\": \"p8ssw0rd\",\n    \"type.name\": \"_doc\",\n    \"elastic.security.protocol\": \"PLAINTEXT\",\n    \"auto.create.indices.at.start\": \"true\",\n    \"topics\" : \"estreams75.ecommerce.customers\",\n    \"write.method\": \"upsert\",\n    \"behavior.on.null.values\": \"delete\",\n    \"behavior.on.malformed.documents\": \"ignore\",\n    \"drop.invalid.message\": \"true\",\n    \"read.timeout.ms\": \"15000\",\n    \"flush.timeout.ms\": \"15000\",\n    \"batch.size\": \"128\",\n    \"schema.ignore\" : \"true\",\n    \"key.converter\": \"org.apache.kafka.connect.converters.IntegerConverter\",\n    \"value.converter\": \"io.confluent.connect.avro.AvroConverter\",\n    \"value.converter.schema.registry.url\": \"http://schema-registry:8081\"\n  }\n}"
						},
						"url": {
							"raw": "http://{{kafka-connect-host}}:8083/connectors",
							"protocol": "http",
							"host": [
								"{{kafka-connect-host}}"
							],
							"port": "8083",
							"path": [
								"connectors"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET CUSTOMERS SOURCE CONNECTOR DETAILS",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{kafka-connect-host}}:8083/connectors/ecommerce-product-streams-75",
							"protocol": "http",
							"host": [
								"{{kafka-connect-host}}"
							],
							"port": "8083",
							"path": [
								"connectors",
								"ecommerce-product-streams-75"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE CUSTOMERS",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{kafka-connect-host}}:8083/connectors/ecommerce-customers-streams-75",
							"protocol": "http",
							"host": [
								"{{kafka-connect-host}}"
							],
							"port": "8083",
							"path": [
								"connectors",
								"ecommerce-customers-streams-75"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE ES SINK CONNECTOR",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{kafka-connect-host}}:8083/connectors/elasticsearch-customers",
							"protocol": "http",
							"host": [
								"{{kafka-connect-host}}"
							],
							"port": "8083",
							"path": [
								"connectors",
								"elasticsearch-customers"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET CUSTOMERS CONNECTOR STATUS",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{kafka-connect-host}}:8083/connectors/ecommerce-customers-streams-75/status",
							"protocol": "http",
							"host": [
								"{{kafka-connect-host}}"
							],
							"port": "8083",
							"path": [
								"connectors",
								"ecommerce-customers-streams-75",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET  CUSTOMERS ES SINK CONNECTOR STATUS",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://{{kafka-connect-host}}:8083/connectors/elasticsearch-customers/status",
							"protocol": "http",
							"host": [
								"{{kafka-connect-host}}"
							],
							"port": "8083",
							"path": [
								"connectors",
								"elasticsearch-customers",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "UPDATE CUSTOMERS CONNECTOR CONFIG",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"connector.class\": \"io.debezium.connector.mysql.MySqlConnector\",\n    \"database.user\": \"debezium\",\n    \"database.server.id\": \"64\",\n    \"database.history.kafka.bootstrap.servers\": \"broker1-internal:9092\",\n    \"database.history.kafka.topic\": \"dbhistory.estreams64\",\n    \"transforms\": \"unwrap,extractkey\",\n    \"database.server.name\": \"estreams64\",\n    \"database.port\": \"3306\",\n    \"include.schema.changes\": \"false\",\n    \"table.whitelist\": \"ecommerce.products,ecommerce.product_details\",\n    \"transforms.extractkey.field\": \"product_id\",\n    \"value.converter.schema.registry.url\": \"http://schemaregistry-internal:8081\",\n    \"database.hostname\": \"mysql-external.mysql56.svc.cluster.local\",\n    \"database.password\": \"db3k4Cc\",\n    \"transforms.extractkey.type\": \"org.apache.kafka.connect.transforms.ExtractField$Key\",\n    \"name\": \"ecommerce-product-streams-64\",\n    \"transforms.unwrap.type\": \"io.debezium.transforms.ExtractNewRecordState\",\n    \"value.converter\": \"io.confluent.connect.avro.AvroConverter\",\n    \"key.converter\": \"org.apache.kafka.connect.converters.IntegerConverter\"\n}"
						},
						"url": {
							"raw": "http://{{kafka-connect-host}}:8083/connectors/ecommerce-customers-streams-75/config",
							"protocol": "http",
							"host": [
								"{{kafka-connect-host}}"
							],
							"port": "8083",
							"path": [
								"connectors",
								"ecommerce-customers-streams-75",
								"config"
							]
						}
					},
					"response": []
				},
				{
					"name": "UPDATE ES CONNECTOR CONFIG",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"connector.class\": \"io.confluent.connect.elasticsearch.ElasticsearchSinkConnector\",\n    \"connection.url\": \"http://elasticsearch-external.default.svc.cluster.local:9200\",\n    \"connection.username\": \"elastic\",\n    \"connection.password\": \"54n9Iw2Qen9djaY534c8nh0p\",\n    \"type.name\": \"_doc\",\n    \"elastic.security.protocol\": \"PLAINTEXT\",\n    \"auto.create.indices.at.start\": \"true\",\n    \"topics\" : \"estreams64.ecommerce.products,estreams64.ecommerce.product_details,estreams64.ecommerce.products_enriched,estreams64.ecommerce.products_enriched1,estreams64.ecommerce.products_enriched2,estreams64.ecommerce.products_enriched3\",\n    \"write.method\": \"upsert\",\n    \"behavior.on.null.values\": \"delete\",\n    \"behavior.on.malformed.documents\": \"ignore\",\n    \"drop.invalid.message\": \"true\",\n    \"read.timeout.ms\": \"15000\",\n    \"flush.timeout.ms\": \"15000\",\n    \"batch.size\": \"128\",\n    \"schema.ignore\" : \"true\",\n    \"key.converter\": \"org.apache.kafka.connect.converters.IntegerConverter\",\n    \"value.converter\": \"io.confluent.connect.avro.AvroConverter\",\n    \"value.converter.schema.registry.url\": \"http://schemaregistry-internal:8081\"\n  }"
						},
						"url": {
							"raw": "http://{{kafka-connect-host}}:8083/connectors/elasticsearch-customers/config",
							"protocol": "http",
							"host": [
								"{{kafka-connect-host}}"
							],
							"port": "8083",
							"path": [
								"connectors",
								"elasticsearch-customers",
								"config"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "ELASTICSEARCH",
			"item": [
				{
					"name": "CREATE PRODUCTS INDEX",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{elastic-username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{elastic-password}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"settings\": {\r\n    \"index\": {\r\n      \"number_of_shards\": 1,\r\n      \"number_of_replicas\": 1,\r\n      \"analysis\": {\r\n        \"analyzer\": {\r\n          \"synonym\": {\r\n            \"tokenizer\": \"standard\",\r\n            \"filter\": [\r\n              \"stop\",\r\n              \"synonym\"\r\n            ]\r\n          }\r\n        },\r\n        \"filter\": {\r\n          \"izzystop\": {\r\n            \"type\": \"stop\",\r\n            \"stopwords\": [\r\n              \"the\",\r\n              \"is\"\r\n            ]\r\n          },\r\n          \"synonym\": {\r\n            \"type\": \"synonym\",\r\n            \"lenient\": true,\r\n            \"expand\": true,\r\n            \"synonyms\": [\r\n              \"lift => elevator\",\r\n              \"speed, velocity\",\r\n              \"cookies, buscuit\",\r\n              \"holiday, vacation\",\r\n              \"xmas, christmas\",\r\n              \"soda, pop, soft drink\",\r\n              \"soccer, football\"\r\n            ]\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  \"mappings\": {\r\n    \"properties\": {\r\n      \"product_id\": {\r\n        \"type\": \"integer\"\r\n      },\r\n      \"name\": {\r\n        \"type\": \"keyword\"\r\n      },\r\n      \"long_description\": {\r\n        \"type\": \"text\",\r\n        \"index\": true,\r\n        \"analyzer\": \"synonym\"\r\n      },\r\n      \"department\": {\r\n        \"type\": \"text\",\r\n        \"index\": true\r\n      }\r\n    }\r\n  }\r\n}"
						},
						"url": {
							"raw": "{{elastic-protocol}}://{{elasticsearch-host}}:9200/products",
							"protocol": "{{elastic-protocol}}",
							"host": [
								"{{elasticsearch-host}}"
							],
							"port": "9200",
							"path": [
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "REMOVE PRODUCTS INDEX",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{elastic-username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{elastic-password}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"settings\": {\r\n    \"index\": {\r\n      \"number_of_shards\": 1,\r\n      \"number_of_replicas\": 1,\r\n      \"analysis\": {\r\n        \"analyzer\": {\r\n          \"synonym\": {\r\n            \"tokenizer\": \"standard\",\r\n            \"filter\": [\r\n              \"stop\",\r\n              \"synonym\"\r\n            ]\r\n          }\r\n        },\r\n        \"filter\": {\r\n          \"izzystop\": {\r\n            \"type\": \"stop\",\r\n            \"stopwords\": [\r\n              \"the\",\r\n              \"is\"\r\n            ]\r\n          },\r\n          \"synonym\": {\r\n            \"type\": \"synonym\",\r\n            \"lenient\": true,\r\n            \"expand\": true,\r\n            \"synonyms\": [\r\n              \"lift => elevator\",\r\n              \"speed, velocity\",\r\n              \"cookies, buscuit\",\r\n              \"holiday, vacation\",\r\n              \"xmas, christmas\",\r\n              \"soda, pop, soft drink\",\r\n              \"soccer, football\"\r\n            ]\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  \"mappings\": {\r\n    \"properties\": {\r\n      \"product_id\": {\r\n        \"type\": \"integer\"\r\n      },\r\n      \"name\": {\r\n        \"type\": \"keyword\"\r\n      },\r\n      \"long_description\": {\r\n        \"type\": \"text\",\r\n        \"index\": true,\r\n        \"analyzer\": \"synonym\"\r\n      },\r\n      \"department\": {\r\n        \"type\": \"text\",\r\n        \"index\": true\r\n      }\r\n    }\r\n  }\r\n}"
						},
						"url": {
							"raw": "{{elastic-protocol}}://{{elasticsearch-host}}:9200/products",
							"protocol": "{{elastic-protocol}}",
							"host": [
								"{{elasticsearch-host}}"
							],
							"port": "9200",
							"path": [
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "REMOVE CONNECT INDICES",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{elastic-username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{elastic-password}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Authorization",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"settings\": {\r\n    \"index\": {\r\n      \"number_of_shards\": 1,\r\n      \"number_of_replicas\": 1,\r\n      \"analysis\": {\r\n        \"analyzer\": {\r\n          \"synonym\": {\r\n            \"tokenizer\": \"standard\",\r\n            \"filter\": [\r\n              \"stop\",\r\n              \"synonym\"\r\n            ]\r\n          }\r\n        },\r\n        \"filter\": {\r\n          \"izzystop\": {\r\n            \"type\": \"stop\",\r\n            \"stopwords\": [\r\n              \"the\",\r\n              \"is\"\r\n            ]\r\n          },\r\n          \"synonym\": {\r\n            \"type\": \"synonym\",\r\n            \"lenient\": true,\r\n            \"expand\": true,\r\n            \"synonyms\": [\r\n              \"lift => elevator\",\r\n              \"speed, velocity\",\r\n              \"cookies, buscuit\",\r\n              \"holiday, vacation\",\r\n              \"xmas, christmas\",\r\n              \"soda, pop, soft drink\",\r\n              \"soccer, football\"\r\n            ]\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  \"mappings\": {\r\n    \"properties\": {\r\n      \"product_id\": {\r\n        \"type\": \"integer\"\r\n      },\r\n      \"name\": {\r\n        \"type\": \"keyword\"\r\n      },\r\n      \"long_description\": {\r\n        \"type\": \"text\",\r\n        \"index\": true,\r\n        \"analyzer\": \"synonym\"\r\n      },\r\n      \"department\": {\r\n        \"type\": \"text\",\r\n        \"index\": true\r\n      }\r\n    }\r\n  }\r\n}"
						},
						"url": {
							"raw": "{{elastic-protocol}}://{{elasticsearch-host}}:9200/estreams*",
							"protocol": "{{elastic-protocol}}",
							"host": [
								"{{elasticsearch-host}}"
							],
							"port": "9200",
							"path": [
								"estreams*"
							]
						}
					},
					"response": []
				},
				{
					"name": "LIST INDICES",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{elastic-username}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{elastic-password}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"settings\": {\r\n    \"index\": {\r\n      \"number_of_shards\": 1,\r\n      \"number_of_replicas\": 1,\r\n      \"analysis\": {\r\n        \"analyzer\": {\r\n          \"synonym\": {\r\n            \"tokenizer\": \"standard\",\r\n            \"filter\": [\r\n              \"stop\",\r\n              \"synonym\"\r\n            ]\r\n          }\r\n        },\r\n        \"filter\": {\r\n          \"izzystop\": {\r\n            \"type\": \"stop\",\r\n            \"stopwords\": [\r\n              \"the\",\r\n              \"is\"\r\n            ]\r\n          },\r\n          \"synonym\": {\r\n            \"type\": \"synonym\",\r\n            \"lenient\": true,\r\n            \"expand\": true,\r\n            \"synonyms\": [\r\n              \"lift => elevator\",\r\n              \"speed, velocity\",\r\n              \"cookies, buscuit\",\r\n              \"holiday, vacation\",\r\n              \"xmas, christmas\",\r\n              \"soda, pop, soft drink\",\r\n              \"soccer, football\"\r\n            ]\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  \"mappings\": {\r\n    \"properties\": {\r\n      \"product_id\": {\r\n        \"type\": \"integer\"\r\n      },\r\n      \"name\": {\r\n        \"type\": \"keyword\"\r\n      },\r\n      \"long_description\": {\r\n        \"type\": \"text\",\r\n        \"index\": true,\r\n        \"analyzer\": \"synonym\"\r\n      },\r\n      \"department\": {\r\n        \"type\": \"text\",\r\n        \"index\": true\r\n      }\r\n    }\r\n  }\r\n}"
						},
						"url": {
							"raw": "{{elastic-protocol}}://{{elasticsearch-host}}:9200/*",
							"protocol": "{{elastic-protocol}}",
							"host": [
								"{{elasticsearch-host}}"
							],
							"port": "9200",
							"path": [
								"*"
							]
						}
					},
					"response": []
				},
				{
					"name": "SEARCH INDEX - CUSTOMERS",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{elastic-password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{elastic-username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"query\": {\r\n    \"match\": {\r\n      \"first_name\": {\r\n        \"query\": \"Mena2\"\r\n      }\r\n    }\r\n  }\r\n}"
						},
						"url": {
							"raw": "{{elastic-protocol}}://{{elasticsearch-host}}:9200/estreams75.ecommerce.customers/_search",
							"protocol": "{{elastic-protocol}}",
							"host": [
								"{{elasticsearch-host}}"
							],
							"port": "9200",
							"path": [
								"estreams75.ecommerce.customers",
								"_search"
							],
							"query": [
								{
									"key": "pretty",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "SEARCH INDEX - CUSTOMERS ALL",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "{{elastic-password}}",
									"type": "string"
								},
								{
									"key": "username",
									"value": "{{elastic-username}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"query\": {\r\n        \"match_all\": {}\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{elastic-protocol}}://{{elasticsearch-host}}:9200/estreams75.ecommerce.customers/_search",
							"protocol": "{{elastic-protocol}}",
							"host": [
								"{{elasticsearch-host}}"
							],
							"port": "9200",
							"path": [
								"estreams75.ecommerce.customers",
								"_search"
							],
							"query": [
								{
									"key": "pretty",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "SCHEMA REGISTRY",
			"item": [
				{
					"name": "LIST SUBJECTS",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{confluent-schemaregistry-host}}:8081/subjects",
							"protocol": "http",
							"host": [
								"{{confluent-schemaregistry-host}}"
							],
							"port": "8081",
							"path": [
								"subjects"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET PRODUCTS VALUE VERSIONS",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{confluent-schemaregistry-host}}:8081/subjects/estreams75.ecommerce.customers-value/versions",
							"protocol": "http",
							"host": [
								"{{confluent-schemaregistry-host}}"
							],
							"port": "8081",
							"path": [
								"subjects",
								"estreams75.ecommerce.customers-value",
								"versions"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET PRODUCTS VALUE VERSION DETAILS",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://{{confluent-schemaregistry-host}}:8081/subjects/estreams75.ecommerce.customers-value/versions/1",
							"protocol": "http",
							"host": [
								"{{confluent-schemaregistry-host}}"
							],
							"port": "8081",
							"path": [
								"subjects",
								"estreams75.ecommerce.customers-value",
								"versions",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "REGISTER PRODUCTS ENRICHED SCHEMA",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"schema\": \"{\\\"type\\\":\\\"record\\\",\\\"name\\\":\\\"Value\\\",\\\"namespace\\\":\\\"estreams64.ecommerce.product_enriched\\\",\\\"fields\\\":[{\\\"name\\\":\\\"product_id\\\",\\\"type\\\":{\\\"type\\\":\\\"int\\\",\\\"connect.default\\\":0},\\\"default\\\":0},{\\\"name\\\":\\\"name\\\",\\\"type\\\":{\\\"type\\\":\\\"string\\\",\\\"connect.default\\\":\\\"\\\"},\\\"default\\\":\\\"\\\"},{\\\"name\\\":\\\"department\\\",\\\"type\\\":{\\\"type\\\":\\\"int\\\",\\\"connect.default\\\":0},\\\"default\\\":0},{\\\"name\\\":\\\"long_description\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"date_created\\\",\\\"type\\\":{\\\"type\\\":\\\"long\\\",\\\"connect.version\\\":1,\\\"connect.default\\\":1577894400000,\\\"connect.name\\\":\\\"io.debezium.time.Timestamp\\\"},\\\"default\\\":1577894400000},{\\\"name\\\":\\\"date_modified\\\",\\\"type\\\":{\\\"type\\\":\\\"string\\\",\\\"connect.version\\\":1,\\\"connect.default\\\":\\\"1970-01-01T00:00:00Z\\\",\\\"connect.name\\\":\\\"io.debezium.time.ZonedTimestamp\\\"},\\\"default\\\":\\\"1970-01-01T00:00:00Z\\\"}],\\\"connect.name\\\":\\\"estreams64.ecommerce.product_enriched.Value\\\"}\"\r\n}"
						},
						"url": {
							"raw": "http://{{confluent-schemaregistry-host}}:8081/subjects/estreams64.ecommerce.product_enriched-value/versions",
							"protocol": "http",
							"host": [
								"{{confluent-schemaregistry-host}}"
							],
							"port": "8081",
							"path": [
								"subjects",
								"estreams64.ecommerce.product_enriched-value",
								"versions"
							]
						}
					},
					"response": []
				},
				{
					"name": "REMOVE SAMPLE SCHEMA",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"schema\": \"{\\\"type\\\":\\\"record\\\",\\\"name\\\":\\\"Value\\\",\\\"namespace\\\":\\\"estreams64.ecommerce.product_enriched\\\",\\\"fields\\\":[{\\\"name\\\":\\\"product_id\\\",\\\"type\\\":{\\\"type\\\":\\\"int\\\",\\\"connect.default\\\":0},\\\"default\\\":0},{\\\"name\\\":\\\"name\\\",\\\"type\\\":{\\\"type\\\":\\\"string\\\",\\\"connect.default\\\":\\\"\\\"},\\\"default\\\":\\\"\\\"},{\\\"name\\\":\\\"department\\\",\\\"type\\\":{\\\"type\\\":\\\"int\\\",\\\"connect.default\\\":0},\\\"default\\\":0},{\\\"name\\\":\\\"long_description\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"date_created\\\",\\\"type\\\":{\\\"type\\\":\\\"long\\\",\\\"connect.version\\\":1,\\\"connect.default\\\":1577894400000,\\\"connect.name\\\":\\\"io.debezium.time.Timestamp\\\"},\\\"default\\\":1577894400000},{\\\"name\\\":\\\"date_modified\\\",\\\"type\\\":{\\\"type\\\":\\\"string\\\",\\\"connect.version\\\":1,\\\"connect.default\\\":\\\"1970-01-01T00:00:00Z\\\",\\\"connect.name\\\":\\\"io.debezium.time.ZonedTimestamp\\\"},\\\"default\\\":\\\"1970-01-01T00:00:00Z\\\"}],\\\"connect.name\\\":\\\"estreams64.ecommerce.product_enriched.Value\\\"}\"\r\n}"
						},
						"url": {
							"raw": "http://{{confluent-schemaregistry-host}}:8081/subjects/estreams64.ecommerce.sample-value",
							"protocol": "http",
							"host": [
								"{{confluent-schemaregistry-host}}"
							],
							"port": "8081",
							"path": [
								"subjects",
								"estreams64.ecommerce.sample-value"
							]
						}
					},
					"response": []
				},
				{
					"name": "REMOVE SAMPLE SCHEMA (PERMANENT)",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"schema\": \"{\\\"type\\\":\\\"record\\\",\\\"name\\\":\\\"Value\\\",\\\"namespace\\\":\\\"estreams64.ecommerce.product_enriched\\\",\\\"fields\\\":[{\\\"name\\\":\\\"product_id\\\",\\\"type\\\":{\\\"type\\\":\\\"int\\\",\\\"connect.default\\\":0},\\\"default\\\":0},{\\\"name\\\":\\\"name\\\",\\\"type\\\":{\\\"type\\\":\\\"string\\\",\\\"connect.default\\\":\\\"\\\"},\\\"default\\\":\\\"\\\"},{\\\"name\\\":\\\"department\\\",\\\"type\\\":{\\\"type\\\":\\\"int\\\",\\\"connect.default\\\":0},\\\"default\\\":0},{\\\"name\\\":\\\"long_description\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"date_created\\\",\\\"type\\\":{\\\"type\\\":\\\"long\\\",\\\"connect.version\\\":1,\\\"connect.default\\\":1577894400000,\\\"connect.name\\\":\\\"io.debezium.time.Timestamp\\\"},\\\"default\\\":1577894400000},{\\\"name\\\":\\\"date_modified\\\",\\\"type\\\":{\\\"type\\\":\\\"string\\\",\\\"connect.version\\\":1,\\\"connect.default\\\":\\\"1970-01-01T00:00:00Z\\\",\\\"connect.name\\\":\\\"io.debezium.time.ZonedTimestamp\\\"},\\\"default\\\":\\\"1970-01-01T00:00:00Z\\\"}],\\\"connect.name\\\":\\\"estreams64.ecommerce.product_enriched.Value\\\"}\"\r\n}"
						},
						"url": {
							"raw": "http://{{confluent-schemaregistry-host}}:8081/subjects/estreams64.ecommerce.sample-value?permanent=true",
							"protocol": "http",
							"host": [
								"{{confluent-schemaregistry-host}}"
							],
							"port": "8081",
							"path": [
								"subjects",
								"estreams64.ecommerce.sample-value"
							],
							"query": [
								{
									"key": "permanent",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "CREATE SAMPLE SCHEMA",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"schema\": \"{\\\"type\\\":\\\"record\\\",\\\"name\\\":\\\"Value\\\",\\\"namespace\\\":\\\"estreams64.ecommerce.sample\\\",\\\"fields\\\":[{\\\"name\\\":\\\"product_id\\\",\\\"type\\\":{\\\"type\\\":\\\"int\\\",\\\"connect.default\\\":0},\\\"default\\\":0},{\\\"name\\\":\\\"name\\\",\\\"type\\\":{\\\"type\\\":\\\"string\\\",\\\"connect.default\\\":\\\"\\\"},\\\"default\\\":\\\"\\\"},{\\\"name\\\":\\\"department\\\",\\\"type\\\":{\\\"type\\\":\\\"int\\\",\\\"connect.default\\\":0},\\\"default\\\":0},{\\\"name\\\":\\\"long_description\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"date_created\\\",\\\"type\\\":{\\\"type\\\":\\\"long\\\",\\\"connect.version\\\":1,\\\"connect.default\\\":1577894400000,\\\"connect.name\\\":\\\"io.debezium.time.Timestamp\\\"},\\\"default\\\":1577894400000},{\\\"name\\\":\\\"date_modified\\\",\\\"type\\\":{\\\"type\\\":\\\"string\\\",\\\"connect.version\\\":1,\\\"connect.default\\\":\\\"1970-01-01T00:00:00Z\\\",\\\"connect.name\\\":\\\"io.debezium.time.ZonedTimestamp\\\"},\\\"default\\\":\\\"1970-01-01T00:00:00Z\\\"}],\\\"connect.name\\\":\\\"estreams64.ecommerce.sample.Value\\\"}\"\r\n}"
						},
						"url": {
							"raw": "http://{{confluent-schemaregistry-host}}:8081/subjects/estreams64.ecommerce.sample-value/versions",
							"protocol": "http",
							"host": [
								"{{confluent-schemaregistry-host}}"
							],
							"port": "8081",
							"path": [
								"subjects",
								"estreams64.ecommerce.sample-value",
								"versions"
							]
						}
					},
					"response": []
				},
				{
					"name": "RETRIEVE SAMPLE SCHEMA",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"schema\": \"{\\\"type\\\":\\\"record\\\",\\\"name\\\":\\\"Value\\\",\\\"namespace\\\":\\\"estreams64.ecommerce.sample\\\",\\\"fields\\\":[{\\\"name\\\":\\\"product_id\\\",\\\"type\\\":{\\\"type\\\":\\\"int\\\",\\\"connect.default\\\":0},\\\"default\\\":0},{\\\"name\\\":\\\"name\\\",\\\"type\\\":{\\\"type\\\":\\\"string\\\",\\\"connect.default\\\":\\\"\\\"},\\\"default\\\":\\\"\\\"},{\\\"name\\\":\\\"department\\\",\\\"type\\\":{\\\"type\\\":\\\"int\\\",\\\"connect.default\\\":0},\\\"default\\\":0},{\\\"name\\\":\\\"long_description\\\",\\\"type\\\":\\\"string\\\"},{\\\"name\\\":\\\"date_created\\\",\\\"type\\\":{\\\"type\\\":\\\"long\\\",\\\"connect.version\\\":1,\\\"connect.default\\\":1577894400000,\\\"connect.name\\\":\\\"io.debezium.time.Timestamp\\\"},\\\"default\\\":1577894400000},{\\\"name\\\":\\\"date_modified\\\",\\\"type\\\":{\\\"type\\\":\\\"string\\\",\\\"connect.version\\\":1,\\\"connect.default\\\":\\\"1970-01-01T00:00:00Z\\\",\\\"connect.name\\\":\\\"io.debezium.time.ZonedTimestamp\\\"},\\\"default\\\":\\\"1970-01-01T00:00:00Z\\\"}],\\\"connect.name\\\":\\\"estreams64.ecommerce.sample.Value\\\"}\"\r\n}"
						},
						"url": {
							"raw": "http://{{confluent-schemaregistry-host}}:8081/subjects/estreams64.ecommerce.sample-value/versions",
							"protocol": "http",
							"host": [
								"{{confluent-schemaregistry-host}}"
							],
							"port": "8081",
							"path": [
								"subjects",
								"estreams64.ecommerce.sample-value",
								"versions"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "elasticsearch-host",
			"value": "localhost"
		},
		{
			"key": "kibana-host",
			"value": "localhost"
		},
		{
			"key": "neo4j-host",
			"value": "localhost"
		},
		{
			"key": "kafka-connect-host",
			"value": "localhost"
		},
		{
			"key": "ksqldbserver-host",
			"value": "localhost"
		},
		{
			"key": "kafka-restproxy-host",
			"value": "localhost"
		},
		{
			"key": "confluent-schemaregistry-host",
			"value": "localhost"
		},
		{
			"key": "zookeeper-host",
			"value": "localhost"
		},
		{
			"key": "elastic-protocol",
			"value": "http"
		}
	]
}